{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8317,"databundleVersionId":109592,"sourceType":"competition"}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/anandtalware/fake-news-classification-with-lstm?scriptVersionId=194774079\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-31T07:57:09.863733Z","iopub.execute_input":"2024-08-31T07:57:09.864219Z","iopub.status.idle":"2024-08-31T07:57:10.427843Z","shell.execute_reply.started":"2024-08-31T07:57:09.864167Z","shell.execute_reply":"2024-08-31T07:57:10.426482Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/fake-news/submit.csv\n/kaggle/input/fake-news/train.csv\n/kaggle/input/fake-news/test.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Basic imports\n","metadata":{}},{"cell_type":"code","source":"import sklearn","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:10.430299Z","iopub.execute_input":"2024-08-31T07:57:10.430865Z","iopub.status.idle":"2024-08-31T07:57:11.258845Z","shell.execute_reply.started":"2024-08-31T07:57:10.430817Z","shell.execute_reply":"2024-08-31T07:57:11.257572Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix\n\n# tensorflow imports\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Embedding, LSTM, Dropout\nfrom tensorflow.keras.preprocessing.text import Tokenizer\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\nfrom tensorflow.keras.callbacks import EarlyStopping\n'''\n# nltk imports\nimport nltk\nfrom nltk.tokenize import word_tokenize\nfrom nltk.corpus import stopwords\n# from nltk.stem import PorterStemmer\nfrom nltk.stem import WordNetLemmatizer\nfrom nltk import pos_tag\nimport string\n\n# Download necessary NLTK resources\nnltk.download('punkt')\nnltk.download('stopwords')\nnltk.download('averaged_perceptron_tagger')\nnltk.download('wordnet')'''\n\n# spacy imports\nimport spacy\n","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:11.260306Z","iopub.execute_input":"2024-08-31T07:57:11.260875Z","iopub.status.idle":"2024-08-31T07:57:32.876577Z","shell.execute_reply.started":"2024-08-31T07:57:11.260827Z","shell.execute_reply":"2024-08-31T07:57:32.875255Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":"# Data importing","metadata":{}},{"cell_type":"code","source":"# train data\ntrain = pd.read_csv('/kaggle/input/fake-news/train.csv', encoding='latin-1')\ntrain.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:32.879828Z","iopub.execute_input":"2024-08-31T07:57:32.880557Z","iopub.status.idle":"2024-08-31T07:57:35.775482Z","shell.execute_reply.started":"2024-08-31T07:57:32.880511Z","shell.execute_reply":"2024-08-31T07:57:35.773903Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"   id                                              title              author  \\\n0   0  House Dem Aide: We Didnât Even See Comeyâs...       Darrell Lucus   \n1   1  FLYNN: Hillary Clinton, Big Woman on Campus - ...     Daniel J. Flynn   \n2   2                  Why the Truth Might Get You Fired  Consortiumnews.com   \n3   3  15 Civilians Killed In Single US Airstrike Hav...     Jessica Purkiss   \n4   4  Iranian woman jailed for fictional unpublished...      Howard Portnoy   \n\n                                                text  label  \n0  House Dem Aide: We Didnât Even See Comeyâs...      1  \n1  Ever get the feeling your life circles the rou...      0  \n2  Why the Truth Might Get You Fired October 29, ...      1  \n3  Videos 15 Civilians Killed In Single US Airstr...      1  \n4  Print \\nAn Iranian woman has been sentenced to...      1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>title</th>\n      <th>author</th>\n      <th>text</th>\n      <th>label</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>House Dem Aide: We Didnât Even See Comeyâs...</td>\n      <td>Darrell Lucus</td>\n      <td>House Dem Aide: We Didnât Even See Comeyâs...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>FLYNN: Hillary Clinton, Big Woman on Campus - ...</td>\n      <td>Daniel J. Flynn</td>\n      <td>Ever get the feeling your life circles the rou...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>Why the Truth Might Get You Fired</td>\n      <td>Consortiumnews.com</td>\n      <td>Why the Truth Might Get You Fired October 29, ...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>15 Civilians Killed In Single US Airstrike Hav...</td>\n      <td>Jessica Purkiss</td>\n      <td>Videos 15 Civilians Killed In Single US Airstr...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>Iranian woman jailed for fictional unpublished...</td>\n      <td>Howard Portnoy</td>\n      <td>Print \\nAn Iranian woman has been sentenced to...</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# test data\ntest = pd.read_csv('/kaggle/input/fake-news/test.csv', encoding='latin-1')\ntest.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:35.777241Z","iopub.execute_input":"2024-08-31T07:57:35.777778Z","iopub.status.idle":"2024-08-31T07:57:36.449253Z","shell.execute_reply.started":"2024-08-31T07:57:35.777706Z","shell.execute_reply":"2024-08-31T07:57:36.447862Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"      id                                              title  \\\n0  20800  Specter of Trump Loosens Tongues, if Not Purse...   \n1  20801  Russian warships ready to strike terrorists ne...   \n2  20802  #NoDAPL: Native American Leaders Vow to Stay A...   \n3  20803  Tim Tebow Will Attempt Another Comeback, This ...   \n4  20804                    Keiser Report: Meme Wars (E995)   \n\n                    author                                               text  \n0         David Streitfeld  PALO ALTO, Calif.  â   After years of scorni...  \n1                      NaN  Russian warships ready to strike terrorists ne...  \n2            Common Dreams  Videos #NoDAPL: Native American Leaders Vow to...  \n3            Daniel Victor  If at first you donât succeed, try a differe...  \n4  Truth Broadcast Network  42 mins ago 1 Views 0 Comments 0 Likes 'For th...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>title</th>\n      <th>author</th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>20800</td>\n      <td>Specter of Trump Loosens Tongues, if Not Purse...</td>\n      <td>David Streitfeld</td>\n      <td>PALO ALTO, Calif.  â   After years of scorni...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>20801</td>\n      <td>Russian warships ready to strike terrorists ne...</td>\n      <td>NaN</td>\n      <td>Russian warships ready to strike terrorists ne...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>20802</td>\n      <td>#NoDAPL: Native American Leaders Vow to Stay A...</td>\n      <td>Common Dreams</td>\n      <td>Videos #NoDAPL: Native American Leaders Vow to...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>20803</td>\n      <td>Tim Tebow Will Attempt Another Comeback, This ...</td>\n      <td>Daniel Victor</td>\n      <td>If at first you donât succeed, try a differe...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>20804</td>\n      <td>Keiser Report: Meme Wars (E995)</td>\n      <td>Truth Broadcast Network</td>\n      <td>42 mins ago 1 Views 0 Comments 0 Likes 'For th...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# check shapes of both datasets\nprint('Shape of Train data: ', train.shape)\nprint()\nprint('Shape of Test data: ', test.shape)","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:36.450727Z","iopub.execute_input":"2024-08-31T07:57:36.451231Z","iopub.status.idle":"2024-08-31T07:57:36.457534Z","shell.execute_reply.started":"2024-08-31T07:57:36.451186Z","shell.execute_reply":"2024-08-31T07:57:36.456217Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"Shape of Train data:  (20800, 5)\n\nShape of Test data:  (5200, 4)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# check data info for both data 'train and test\n","metadata":{}},{"cell_type":"code","source":"# train data info\ntrain.info()","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:36.459251Z","iopub.execute_input":"2024-08-31T07:57:36.459741Z","iopub.status.idle":"2024-08-31T07:57:36.501632Z","shell.execute_reply.started":"2024-08-31T07:57:36.459687Z","shell.execute_reply":"2024-08-31T07:57:36.500304Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 20800 entries, 0 to 20799\nData columns (total 5 columns):\n #   Column  Non-Null Count  Dtype \n---  ------  --------------  ----- \n 0   id      20800 non-null  int64 \n 1   title   20242 non-null  object\n 2   author  18843 non-null  object\n 3   text    20761 non-null  object\n 4   label   20800 non-null  int64 \ndtypes: int64(2), object(3)\nmemory usage: 812.6+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"# test data info \ntest.info()","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:36.503335Z","iopub.execute_input":"2024-08-31T07:57:36.503726Z","iopub.status.idle":"2024-08-31T07:57:36.518671Z","shell.execute_reply.started":"2024-08-31T07:57:36.503687Z","shell.execute_reply":"2024-08-31T07:57:36.517199Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 5200 entries, 0 to 5199\nData columns (total 4 columns):\n #   Column  Non-Null Count  Dtype \n---  ------  --------------  ----- \n 0   id      5200 non-null   int64 \n 1   title   5078 non-null   object\n 2   author  4697 non-null   object\n 3   text    5193 non-null   object\ndtypes: int64(1), object(3)\nmemory usage: 162.6+ KB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Data cleaning for both datasets train and test:","metadata":{"execution":{"iopub.status.busy":"2024-08-31T05:55:56.54274Z","iopub.execute_input":"2024-08-31T05:55:56.543795Z","iopub.status.idle":"2024-08-31T05:55:56.548311Z","shell.execute_reply.started":"2024-08-31T05:55:56.54375Z","shell.execute_reply":"2024-08-31T05:55:56.546943Z"}}},{"cell_type":"code","source":"# check null values\n# train null values\ntrain.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:36.520419Z","iopub.execute_input":"2024-08-31T07:57:36.520913Z","iopub.status.idle":"2024-08-31T07:57:36.542516Z","shell.execute_reply.started":"2024-08-31T07:57:36.520867Z","shell.execute_reply":"2024-08-31T07:57:36.541141Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"id           0\ntitle      558\nauthor    1957\ntext        39\nlabel        0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# null values in test data\ntest.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:36.547616Z","iopub.execute_input":"2024-08-31T07:57:36.5484Z","iopub.status.idle":"2024-08-31T07:57:36.560984Z","shell.execute_reply.started":"2024-08-31T07:57:36.548353Z","shell.execute_reply":"2024-08-31T07:57:36.559613Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"id          0\ntitle     122\nauthor    503\ntext        7\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"print('Total null values in train data: ',sum(train.isnull().sum()))\nprint('Total null values in test data: ',sum(test.isnull().sum()))","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:36.562922Z","iopub.execute_input":"2024-08-31T07:57:36.563433Z","iopub.status.idle":"2024-08-31T07:57:36.587011Z","shell.execute_reply.started":"2024-08-31T07:57:36.563377Z","shell.execute_reply":"2024-08-31T07:57:36.585806Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"Total null values in train data:  2554\nTotal null values in test data:  632\n","output_type":"stream"}]},{"cell_type":"code","source":"# check duplicated data\nprint('Total duplicated records in train data: ',train.duplicated().sum() )\nprint('Total duplicated records in test data: ',test.duplicated().sum() )","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:36.588756Z","iopub.execute_input":"2024-08-31T07:57:36.589224Z","iopub.status.idle":"2024-08-31T07:57:36.713945Z","shell.execute_reply.started":"2024-08-31T07:57:36.589159Z","shell.execute_reply":"2024-08-31T07:57:36.712397Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"Total duplicated records in train data:  0\nTotal duplicated records in test data:  0\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Conclusion after checking data\n- There are total 2554 missing data in train data.\n- There are total 632 missing data in test data.\n- We can drop that null data from both dataset because we can't replace any other text values.","metadata":{}},{"cell_type":"code","source":"# drop na\ntrain_1 = train.dropna()\ntest_1 = test.dropna()","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:36.715603Z","iopub.execute_input":"2024-08-31T07:57:36.71611Z","iopub.status.idle":"2024-08-31T07:57:36.741497Z","shell.execute_reply.started":"2024-08-31T07:57:36.716056Z","shell.execute_reply":"2024-08-31T07:57:36.740207Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"# shape after remove null values\nprint('Shape of Train data after removed null values: ', train_1.shape)\nprint()\nprint('Shape of Test data after removed null values: ', test_1.shape)","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:36.743301Z","iopub.execute_input":"2024-08-31T07:57:36.743823Z","iopub.status.idle":"2024-08-31T07:57:36.750924Z","shell.execute_reply.started":"2024-08-31T07:57:36.743747Z","shell.execute_reply":"2024-08-31T07:57:36.749451Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"Shape of Train data after removed null values:  (18285, 5)\n\nShape of Test data after removed null values:  (4575, 4)\n","output_type":"stream"}]},{"cell_type":"code","source":"train_1.columns","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:36.752842Z","iopub.execute_input":"2024-08-31T07:57:36.753407Z","iopub.status.idle":"2024-08-31T07:57:36.764823Z","shell.execute_reply.started":"2024-08-31T07:57:36.753355Z","shell.execute_reply":"2024-08-31T07:57:36.763402Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"Index(['id', 'title', 'author', 'text', 'label'], dtype='object')"},"metadata":{}}]},{"cell_type":"markdown","source":"# Preprocessing text:","metadata":{}},{"cell_type":"code","source":"# Load spaCy model\nnlp = spacy.load('en_core_web_sm')\n","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:36.76629Z","iopub.execute_input":"2024-08-31T07:57:36.766849Z","iopub.status.idle":"2024-08-31T07:57:38.243815Z","shell.execute_reply.started":"2024-08-31T07:57:36.766791Z","shell.execute_reply":"2024-08-31T07:57:38.242359Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"# create fuction that perform all preprocessing\n\n\ndef preprocess_text(text):\n    \"\"\"Preprocess text using spaCy and prepare for TensorFlow tokenizer.\"\"\"\n    if isinstance(text, str):  # Ensure input is a string\n        doc = nlp(text)  # Process the text with spaCy\n        tokens = [token.lemma_.lower() for token in doc if not token.is_punct and not token.is_stop]\n        return ' '.join(tokens)  # Join tokens to form the cleaned text\n    else:\n        raise ValueError(\"Input must be a string\")","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:38.245447Z","iopub.execute_input":"2024-08-31T07:57:38.245886Z","iopub.status.idle":"2024-08-31T07:57:38.253603Z","shell.execute_reply.started":"2024-08-31T07:57:38.245841Z","shell.execute_reply":"2024-08-31T07:57:38.252336Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"markdown","source":"# get dependent and independe data","metadata":{}},{"cell_type":"code","source":"X = train_1['title']\ny = train_1['label']","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:38.255138Z","iopub.execute_input":"2024-08-31T07:57:38.255548Z","iopub.status.idle":"2024-08-31T07:57:38.266744Z","shell.execute_reply.started":"2024-08-31T07:57:38.255505Z","shell.execute_reply":"2024-08-31T07:57:38.265403Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"X\n","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:38.268416Z","iopub.execute_input":"2024-08-31T07:57:38.268947Z","iopub.status.idle":"2024-08-31T07:57:38.28199Z","shell.execute_reply.started":"2024-08-31T07:57:38.26889Z","shell.execute_reply":"2024-08-31T07:57:38.280403Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"0        House Dem Aide: We Didnât Even See Comeyâs...\n1        FLYNN: Hillary Clinton, Big Woman on Campus - ...\n2                        Why the Truth Might Get You Fired\n3        15 Civilians Killed In Single US Airstrike Hav...\n4        Iranian woman jailed for fictional unpublished...\n                               ...                        \n20795    Rapper T.I.: Trump a âPoster Child For White...\n20796    N.F.L. Playoffs: Schedule, Matchups and Odds -...\n20797    Macyâs Is Said to Receive Takeover Approach ...\n20798    NATO, Russia To Hold Parallel Exercises In Bal...\n20799                            What Keeps the F-35 Alive\nName: title, Length: 18285, dtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"# Train test split","metadata":{}},{"cell_type":"code","source":"# Preprocess the texts by using above fuction\nprocessed_texts = [preprocess_text(text) for text in X]","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:57:38.283621Z","iopub.execute_input":"2024-08-31T07:57:38.284197Z","iopub.status.idle":"2024-08-31T08:00:34.530221Z","shell.execute_reply.started":"2024-08-31T07:57:38.28415Z","shell.execute_reply":"2024-08-31T08:00:34.528915Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"# Split the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(processed_texts, y, test_size=0.2, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:00:34.53194Z","iopub.execute_input":"2024-08-31T08:00:34.532355Z","iopub.status.idle":"2024-08-31T08:00:34.549458Z","shell.execute_reply.started":"2024-08-31T08:00:34.532313Z","shell.execute_reply":"2024-08-31T08:00:34.548141Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"print('Shape of X_train: ',len(X_train))\nprint('Shape of X_test: ', len(X_test))\nprint('Shape of y_train: ', len(y_train))\nprint('Shape of y_test: ', len(y_test))","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:00:34.551387Z","iopub.execute_input":"2024-08-31T08:00:34.551809Z","iopub.status.idle":"2024-08-31T08:00:34.559257Z","shell.execute_reply.started":"2024-08-31T08:00:34.551733Z","shell.execute_reply":"2024-08-31T08:00:34.557842Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"Shape of X_train:  14628\nShape of X_test:  3657\nShape of y_train:  14628\nShape of y_test:  3657\n","output_type":"stream"}]},{"cell_type":"code","source":"# pad sequence\ndef prepare_and_pad_sequences(X_train, X_test, max_length=None):\n    \"\"\"\n    Tokenizes, converts texts to sequences, and pads the sequences for training and test sets.\n\n    Args:\n    - X_train (list of str): List of training text records.\n    - X_test (list of str): List of test text records.\n    - max_length (int, optional): Maximum sequence length for padding. If None, it's determined from training data.\n\n    Returns:\n    - X_train_padded (array): Padded sequences for training set.\n    - X_test_padded (array): Padded sequences for test set.\n    - tokenizer (Tokenizer): Fitted tokenizer for use with unseen data.\n    \"\"\"\n    \n    # Initialize and fit the tokenizer on the training data\n    tokenizer = Tokenizer()\n    tokenizer.fit_on_texts(X_train)\n    \n    # Convert texts to sequences\n    train_sequences = tokenizer.texts_to_sequences(X_train)\n    test_sequences = tokenizer.texts_to_sequences(X_test)\n    \n    # Define the maximum sequence length\n    if max_length is None:\n        max_length = max(len(seq) for seq in train_sequences)# Or choose another method for max_length\n        \n    \n    # Pad sequences\n    X_train_padded = pad_sequences(train_sequences, maxlen=max_length+1)\n    X_test_padded = pad_sequences(test_sequences, maxlen=max_length+1)\n    \n    return X_train_padded, X_test_padded, max_length, tokenizer","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:00:34.560553Z","iopub.execute_input":"2024-08-31T08:00:34.560957Z","iopub.status.idle":"2024-08-31T08:00:34.581463Z","shell.execute_reply.started":"2024-08-31T08:00:34.560915Z","shell.execute_reply":"2024-08-31T08:00:34.579929Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"\n# Prepare sequences for training and testing sets\nX_train_padded, X_test_padded,max_length, tokenizer = prepare_and_pad_sequences(X_train, X_test)\n\n\nprint(\"Training Sequences Shape:\", X_train_padded.shape)\nprint(\"Testing Sequences Shape:\", X_test_padded.shape)\nprint('Max length is : ', max_length+1)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:00:34.583211Z","iopub.execute_input":"2024-08-31T08:00:34.58367Z","iopub.status.idle":"2024-08-31T08:00:35.740613Z","shell.execute_reply.started":"2024-08-31T08:00:34.583619Z","shell.execute_reply":"2024-08-31T08:00:35.739276Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stdout","text":"Training Sequences Shape: (14628, 44)\nTesting Sequences Shape: (3657, 44)\nMax length is :  44\n","output_type":"stream"}]},{"cell_type":"code","source":"X_train_padded","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:00:35.742523Z","iopub.execute_input":"2024-08-31T08:00:35.743081Z","iopub.status.idle":"2024-08-31T08:00:35.751937Z","shell.execute_reply.started":"2024-08-31T08:00:35.743013Z","shell.execute_reply":"2024-08-31T08:00:35.750631Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"array([[    0,     0,     0, ...,     1,     2,     3],\n       [    0,     0,     0, ...,     1,     2,     3],\n       [    0,     0,     0, ...,     1,     2,     3],\n       ...,\n       [    0,     0,     0, ...,     1,     2,     3],\n       [    0,     0,     0, ...,  1523,  1629,     5],\n       [    0,     0,     0, ...,   642,  2843, 21360]], dtype=int32)"},"metadata":{}}]},{"cell_type":"markdown","source":"# Model creation","metadata":{}},{"cell_type":"code","source":"# Model parameters\nvocab_size = len(tokenizer.word_index) + 1  # Vocabulary size\nprint('vocab size is : ', vocab_size)\nembedding_dim = 100  # Dimension of the embedding vector\n#max_length = padded_sequences.shape[1]  # Length of the input sequences\nmax_length = max_length","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:00:35.753673Z","iopub.execute_input":"2024-08-31T08:00:35.754285Z","iopub.status.idle":"2024-08-31T08:00:35.76506Z","shell.execute_reply.started":"2024-08-31T08:00:35.754222Z","shell.execute_reply":"2024-08-31T08:00:35.763546Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"vocab size is :  21361\n","output_type":"stream"}]},{"cell_type":"code","source":"# lstm model \n# Build the model\nmodel = Sequential([\n    Embedding(input_dim=vocab_size, output_dim=embedding_dim),\n    Dropout(0.3),\n    LSTM(128, return_sequences=True),\n    Dropout(0.5),\n    LSTM(64),\n    Dense(1, activation='sigmoid')  # For binary classification; use softmax for multi-class\n])\n\n# Compile the model\nmodel.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:00:35.766954Z","iopub.execute_input":"2024-08-31T08:00:35.767493Z","iopub.status.idle":"2024-08-31T08:00:35.869975Z","shell.execute_reply.started":"2024-08-31T08:00:35.767437Z","shell.execute_reply":"2024-08-31T08:00:35.868728Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"# Initialize the early stopping callback\nearly_stopping = EarlyStopping(\n    monitor='val_loss',  # Metric to monitor (e.g., 'val_accuracy', 'val_loss')\n    patience=3,          # Number of epochs with no improvement after which training will be stopped\n    verbose=1,           # Verbosity mode (0 or 1)\n    restore_best_weights=True  # Restore model weights from the epoch with the best value of the monitored quantity\n)","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:00:35.876186Z","iopub.execute_input":"2024-08-31T08:00:35.876614Z","iopub.status.idle":"2024-08-31T08:00:35.883159Z","shell.execute_reply.started":"2024-08-31T08:00:35.876575Z","shell.execute_reply":"2024-08-31T08:00:35.881458Z"},"trusted":true},"execution_count":28,"outputs":[]},{"cell_type":"code","source":"# Train the model\nhistory = model.fit(X_train_padded, y_train, epochs=10, batch_size=32, \n                    validation_split=0.1, verbose=1,\n                   callbacks = [early_stopping])","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:00:35.885254Z","iopub.execute_input":"2024-08-31T08:00:35.885737Z","iopub.status.idle":"2024-08-31T08:03:03.695207Z","shell.execute_reply.started":"2024-08-31T08:00:35.885693Z","shell.execute_reply":"2024-08-31T08:03:03.693684Z"},"trusted":true},"execution_count":29,"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m412/412\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 88ms/step - accuracy: 0.8325 - loss: 0.3426 - val_accuracy: 0.9323 - val_loss: 0.1700\nEpoch 2/10\n\u001b[1m412/412\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m36s\u001b[0m 88ms/step - accuracy: 0.9773 - loss: 0.0671 - val_accuracy: 0.9262 - val_loss: 0.2328\nEpoch 3/10\n\u001b[1m412/412\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m35s\u001b[0m 86ms/step - accuracy: 0.9926 - loss: 0.0228 - val_accuracy: 0.9296 - val_loss: 0.2188\nEpoch 4/10\n\u001b[1m412/412\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m35s\u001b[0m 85ms/step - accuracy: 0.9969 - loss: 0.0100 - val_accuracy: 0.9275 - val_loss: 0.3097\nEpoch 4: early stopping\nRestoring model weights from the end of the best epoch: 1.\n","output_type":"stream"}]},{"cell_type":"code","source":"# Evaluate the model\nloss, accuracy = model.evaluate(X_test_padded, y_test, verbose=1)\nprint(f\"Test Loss: {loss}\")\nprint(f\"Test Accuracy: {accuracy}\")","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:03:03.697312Z","iopub.execute_input":"2024-08-31T08:03:03.697896Z","iopub.status.idle":"2024-08-31T08:03:07.162899Z","shell.execute_reply.started":"2024-08-31T08:03:03.697831Z","shell.execute_reply":"2024-08-31T08:03:07.16147Z"},"trusted":true},"execution_count":30,"outputs":[{"name":"stdout","text":"\u001b[1m115/115\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 29ms/step - accuracy: 0.9336 - loss: 0.1928\nTest Loss: 0.18799027800559998\nTest Accuracy: 0.9316379427909851\n","output_type":"stream"}]},{"cell_type":"code","source":"pred1 = model.predict(X_test_padded)\npred1 = [1 if i > 0.5 else 0 for i in pred1]","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:03:07.165074Z","iopub.execute_input":"2024-08-31T08:03:07.165495Z","iopub.status.idle":"2024-08-31T08:03:11.310584Z","shell.execute_reply.started":"2024-08-31T08:03:07.165455Z","shell.execute_reply":"2024-08-31T08:03:11.309176Z"},"trusted":true},"execution_count":31,"outputs":[{"name":"stdout","text":"\u001b[1m115/115\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 32ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"# confusion matrix for \nprint(confusion_matrix(y_test, pred1))","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:03:11.312809Z","iopub.execute_input":"2024-08-31T08:03:11.313419Z","iopub.status.idle":"2024-08-31T08:03:11.326638Z","shell.execute_reply.started":"2024-08-31T08:03:11.313353Z","shell.execute_reply":"2024-08-31T08:03:11.325118Z"},"trusted":true},"execution_count":32,"outputs":[{"name":"stdout","text":"[[1884  198]\n [  52 1523]]\n","output_type":"stream"}]},{"cell_type":"code","source":"# accyracy score\nfrom sklearn.metrics import accuracy_score\nprint('Accuracy: ', accuracy_score(y_test, pred1))","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:03:11.328738Z","iopub.execute_input":"2024-08-31T08:03:11.329382Z","iopub.status.idle":"2024-08-31T08:03:11.339758Z","shell.execute_reply.started":"2024-08-31T08:03:11.329317Z","shell.execute_reply":"2024-08-31T08:03:11.338477Z"},"trusted":true},"execution_count":33,"outputs":[{"name":"stdout","text":"Accuracy:  0.9316379546076019\n","output_type":"stream"}]},{"cell_type":"code","source":"# classification report\nprint(classification_report(y_test, pred1))","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:12:03.510508Z","iopub.execute_input":"2024-08-31T08:12:03.5111Z","iopub.status.idle":"2024-08-31T08:12:03.537911Z","shell.execute_reply.started":"2024-08-31T08:12:03.511048Z","shell.execute_reply":"2024-08-31T08:12:03.536552Z"},"trusted":true},"execution_count":41,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.97      0.90      0.94      2082\n           1       0.88      0.97      0.92      1575\n\n    accuracy                           0.93      3657\n   macro avg       0.93      0.94      0.93      3657\nweighted avg       0.94      0.93      0.93      3657\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Prediction on New unseen data : test_1 data which we have already cleaned.","metadata":{}},{"cell_type":"code","source":"# Predict on new data\nsequences_text_1 = tokenizer.texts_to_sequences(test_1['text'])\npad_sequences_text_1 = pad_sequences(sequences_text_1, maxlen=max_length+1)\n","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:03:11.341639Z","iopub.execute_input":"2024-08-31T08:03:11.343107Z","iopub.status.idle":"2024-08-31T08:03:16.358144Z","shell.execute_reply.started":"2024-08-31T08:03:11.343037Z","shell.execute_reply":"2024-08-31T08:03:16.356831Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"code","source":"pad_sequences_text_1","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:03:16.35964Z","iopub.execute_input":"2024-08-31T08:03:16.360051Z","iopub.status.idle":"2024-08-31T08:03:16.370159Z","shell.execute_reply.started":"2024-08-31T08:03:16.360011Z","shell.execute_reply":"2024-08-31T08:03:16.36851Z"},"trusted":true},"execution_count":35,"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"array([[   88,  7435, 19808, ...,   663,  5815,   499],\n       [  179,  8448,  3949, ...,   509,  1953,    37],\n       [ 6739,   587,  7763, ...,  2558, 11491,  2104],\n       ...,\n       [ 4333,  7763,    85, ...,  3518, 12947,   499],\n       [  111,  1050,  1593, ...,     9,   199,   513],\n       [ 1052,  1476,  5043, ...,  4131,  7763, 17820]], dtype=int32)"},"metadata":{}}]},{"cell_type":"code","source":"# Predict on new data\npredictions = model.predict(pad_sequences_text_1)","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:03:16.371957Z","iopub.execute_input":"2024-08-31T08:03:16.372383Z","iopub.status.idle":"2024-08-31T08:03:20.749997Z","shell.execute_reply.started":"2024-08-31T08:03:16.372338Z","shell.execute_reply":"2024-08-31T08:03:20.748648Z"},"trusted":true},"execution_count":36,"outputs":[{"name":"stdout","text":"\u001b[1m143/143\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 29ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"pred = [1 if i > 0.5 else 0 for i in predictions]","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:03:20.751878Z","iopub.execute_input":"2024-08-31T08:03:20.752431Z","iopub.status.idle":"2024-08-31T08:03:20.777866Z","shell.execute_reply.started":"2024-08-31T08:03:20.752383Z","shell.execute_reply":"2024-08-31T08:03:20.776377Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"submit  = pd.read_csv('/kaggle/input/fake-news/submit.csv', encoding='latin-1')","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:03:20.77974Z","iopub.execute_input":"2024-08-31T08:03:20.780326Z","iopub.status.idle":"2024-08-31T08:03:20.809495Z","shell.execute_reply.started":"2024-08-31T08:03:20.780228Z","shell.execute_reply":"2024-08-31T08:03:20.807945Z"},"trusted":true},"execution_count":38,"outputs":[]},{"cell_type":"code","source":"submit.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:03:20.811525Z","iopub.execute_input":"2024-08-31T08:03:20.812057Z","iopub.status.idle":"2024-08-31T08:03:20.82409Z","shell.execute_reply.started":"2024-08-31T08:03:20.811999Z","shell.execute_reply":"2024-08-31T08:03:20.822872Z"},"trusted":true},"execution_count":39,"outputs":[{"execution_count":39,"output_type":"execute_result","data":{"text/plain":"id       0\nlabel    0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"# save the model ","metadata":{}},{"cell_type":"code","source":"model.save('fake_news_classification.keras')","metadata":{"execution":{"iopub.status.busy":"2024-08-31T08:03:20.825729Z","iopub.execute_input":"2024-08-31T08:03:20.826234Z","iopub.status.idle":"2024-08-31T08:03:20.978049Z","shell.execute_reply.started":"2024-08-31T08:03:20.826181Z","shell.execute_reply":"2024-08-31T08:03:20.976271Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}